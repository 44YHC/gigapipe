name: 'Build Multi-Arch'

on:
  release:
    types: [created]

jobs:
  build:
    name: 'Build & Publish'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'
        with:
          ref: ${{ github.ref }}
      - uses: MYXOMOPX/modify-pkg-json@master
        id: setcmnver
        with: 
          target: ./package.json
          action: "set_version"
          argument: "${{  github.ref_name }}"
      - name: Check NPM secret presence
        id: checksecrets
        shell: bash
        run: |
          if [ "$SECRET" == "" ]; then
            echo ::set-output name=secretspresent::false
          else
            echo ::set-output name=secretspresent::true
          fi
        env:
          SECRET: ${{ secrets.NPM_TOKEN }}
      - uses: actions/setup-node@v4.0.0
        if: ${{ steps.checksecrets.outputs.secretspresent }}
        with:
          node-version: 18
      - name: Publish to NPM
        if: ${{ steps.checksecrets.outputs.secretspresent }}
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm install
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Check Docker secret presence
        id: checkdocker
        shell: bash
        run: |
          if [ "$SECRET" == "" ]; then
            echo ::set-output name=secretspresent::false
          else
            echo ::set-output name=secretspresent::true
          fi
        env:
          SECRET: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker QEMU
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        uses: docker/setup-qemu-action@v2
        with:
           platforms: amd64, arm64
      - name: Set up Docker Buildx
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
      - name: Build and push to Docker Hub
        if: ${{ steps.checkdocker.outputs.secretspresent }}
        id: docker_build
        uses: docker/build-push-action@v3.0.0
        with:
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            qxip/qryn:latest
            qxip/qryn:${{ github.ref_name }}
            qxip/cloki:latest
            qxip/cloki:${{ github.ref_name }}
            
      - name: Log in to the GHCR registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GHCR
        uses: docker/build-push-action@v3.0.0
        with:
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
             ghcr.io/metrico/qryn:latest
             ghcr.io/metrico/qryn:${{ github.ref_name }}
